# platform.txt (Version 15 - Based on Portenta H7 Architecture)
name=Himax WE2 Boards (Community)
version=0.1.0

# Build variables
build.core.path={runtime.platform.path}/cores/{build.core}
build.variant.path={runtime.platform.path}/variants/{build.variant}

# Compiler settings
compiler.path={runtime.tools.arm-none-eabi-gcc.path}/bin/
compiler.c.cmd=arm-none-eabi-gcc
compiler.cpp.cmd=arm-none-eabi-g++
compiler.ar.cmd=arm-none-eabi-ar
compiler.objcopy.cmd=arm-none-eabi-objcopy
compiler.size.cmd=arm-none-eabi-size

# Build Recipes - This now uses the @ response file strategy, just like the Portenta H7.
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" -c -g -Os -w -nostdlib -mcpu=cortex-m55 -mthumb -mfloat-abi=hard -mfpu=fpv5-d16 -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} @"{build.variant.path}/defines.txt" @"{build.variant.path}/cflags.txt" @"{build.variant.path}/includes.txt" "{source_file}" -o "{object_file}"
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" -c -g -Os -w -fno-rtti -fno-exceptions -nostdlib -mcpu=cortex-m55 -mthumb -mfloat-abi=hard -mfpu=fpv5-d16 -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} @"{build.variant.path}/defines.txt" @"{build.variant.path}/cxxflags.txt" @"{build.variant.path}/includes.txt" "{source_file}" -o "{object_file}"
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" rcs "{archive_file_path}" "{object_file}"
recipe.c.combine.pattern="{compiler.path}{compiler.cpp.cmd}" -Os -Wl,--gc-sections -mcpu=cortex-m55 -mthumb -mfloat-abi=hard -mfpu=fpv5-d16 -nostartfiles -Wl,--defsym=__STACK_SIZE=0x1000 -Wl,--defsym=__STACK_LIMIT=0x10000000 -Wl,--defsym=__HEAP_SIZE=0x40000 -Wl,-T"{build.variant.path}/linker_script.ld" "-Wl,-Map,{build.path}/{build.project_name}.map" -o "{build.path}/{build.project_name}.elf" "-L{build.path}" -Wl,--start-group {object_files} "{archive_file_path}" -Wl,--end-group @"{build.variant.path}/ldflags.txt"
recipe.objcopy.bin.pattern="{compiler.path}{compiler.objcopy.cmd}" -O binary "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.bin"
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"

# Upload Recipe
tools.flasher.cmd=python3
tools.flasher.path={runtime.platform.path}/tools
tools.flasher.pattern="{cmd}" "{path}/flasher.py" -f "{build.path}/{build.project_name}.bin" --port "{serial.port}"